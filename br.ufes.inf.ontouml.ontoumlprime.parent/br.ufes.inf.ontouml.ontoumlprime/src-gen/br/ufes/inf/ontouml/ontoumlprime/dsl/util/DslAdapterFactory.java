/**
 * generated by Xtext 2.20.0
 */
package br.ufes.inf.ontouml.ontoumlprime.dsl.util;

import br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryFormalRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryMaterialRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Category;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Characterization;
import br.ufes.inf.ontouml.ontoumlprime.dsl.CollectiveUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.ComplexDataType;
import br.ufes.inf.ontouml.ontoumlprime.dsl.ComponentOfRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.DataType;
import br.ufes.inf.ontouml.ontoumlprime.dsl.DataTypeAttribute;
import br.ufes.inf.ontouml.ontoumlprime.dsl.DslPackage;
import br.ufes.inf.ontouml.ontoumlprime.dsl.EndurantUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Enumeration;
import br.ufes.inf.ontouml.ontoumlprime.dsl.ExternallyDependentUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.GeneralizationSet;
import br.ufes.inf.ontouml.ontoumlprime.dsl.IntrinsicMomentUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Kind;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Mediation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.MembershipRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.MeronymicRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Mixin;
import br.ufes.inf.ontouml.ontoumlprime.dsl.ModeUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Model;
import br.ufes.inf.ontouml.ontoumlprime.dsl.PackageableElement;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Phase;
import br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataType;
import br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataTypeType;
import br.ufes.inf.ontouml.ontoumlprime.dsl.QualityUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.QuantityUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.RelatorUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Role;
import br.ufes.inf.ontouml.ontoumlprime.dsl.RoleMixin;
import br.ufes.inf.ontouml.ontoumlprime.dsl.SubCollectionRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.SubKind;
import br.ufes.inf.ontouml.ontoumlprime.dsl.SubQuantityRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.SubstantialUniversal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.Universal;
import br.ufes.inf.ontouml.ontoumlprime.dsl.nAryFormalRelation;
import br.ufes.inf.ontouml.ontoumlprime.dsl.nAryMaterialRelation;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see br.ufes.inf.ontouml.ontoumlprime.dsl.DslPackage
 * @generated
 */
public class DslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = DslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DslSwitch<Adapter> modelSwitch =
    new DslSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter casePackageableElement(PackageableElement object)
      {
        return createPackageableElementAdapter();
      }
      @Override
      public Adapter caseEndurantUniversal(EndurantUniversal object)
      {
        return createEndurantUniversalAdapter();
      }
      @Override
      public Adapter caseUniversal(Universal object)
      {
        return createUniversalAdapter();
      }
      @Override
      public Adapter caseDataType(DataType object)
      {
        return createDataTypeAdapter();
      }
      @Override
      public Adapter caseIntrinsicMomentUniversal(IntrinsicMomentUniversal object)
      {
        return createIntrinsicMomentUniversalAdapter();
      }
      @Override
      public Adapter caseExternallyDependentUniversal(ExternallyDependentUniversal object)
      {
        return createExternallyDependentUniversalAdapter();
      }
      @Override
      public Adapter casePackage(br.ufes.inf.ontouml.ontoumlprime.dsl.Package object)
      {
        return createPackageAdapter();
      }
      @Override
      public Adapter caseGeneralizationSet(GeneralizationSet object)
      {
        return createGeneralizationSetAdapter();
      }
      @Override
      public Adapter casePrimitiveDataType(PrimitiveDataType object)
      {
        return createPrimitiveDataTypeAdapter();
      }
      @Override
      public Adapter caseComplexDataType(ComplexDataType object)
      {
        return createComplexDataTypeAdapter();
      }
      @Override
      public Adapter caseEnumeration(Enumeration object)
      {
        return createEnumerationAdapter();
      }
      @Override
      public Adapter caseSubstantialUniversal(SubstantialUniversal object)
      {
        return createSubstantialUniversalAdapter();
      }
      @Override
      public Adapter caseMeronymicRelation(MeronymicRelation object)
      {
        return createMeronymicRelationAdapter();
      }
      @Override
      public Adapter caseComponentOfRelation(ComponentOfRelation object)
      {
        return createComponentOfRelationAdapter();
      }
      @Override
      public Adapter caseMembershipRelation(MembershipRelation object)
      {
        return createMembershipRelationAdapter();
      }
      @Override
      public Adapter caseSubCollectionRelation(SubCollectionRelation object)
      {
        return createSubCollectionRelationAdapter();
      }
      @Override
      public Adapter caseSubQuantityRelation(SubQuantityRelation object)
      {
        return createSubQuantityRelationAdapter();
      }
      @Override
      public Adapter caseKind(Kind object)
      {
        return createKindAdapter();
      }
      @Override
      public Adapter caseQuantityUniversal(QuantityUniversal object)
      {
        return createQuantityUniversalAdapter();
      }
      @Override
      public Adapter caseCollectiveUniversal(CollectiveUniversal object)
      {
        return createCollectiveUniversalAdapter();
      }
      @Override
      public Adapter caseSubKind(SubKind object)
      {
        return createSubKindAdapter();
      }
      @Override
      public Adapter caseRole(Role object)
      {
        return createRoleAdapter();
      }
      @Override
      public Adapter casePhase(Phase object)
      {
        return createPhaseAdapter();
      }
      @Override
      public Adapter caseCategory(Category object)
      {
        return createCategoryAdapter();
      }
      @Override
      public Adapter caseMixin(Mixin object)
      {
        return createMixinAdapter();
      }
      @Override
      public Adapter caseRoleMixin(RoleMixin object)
      {
        return createRoleMixinAdapter();
      }
      @Override
      public Adapter caseRelatorUniversal(RelatorUniversal object)
      {
        return createRelatorUniversalAdapter();
      }
      @Override
      public Adapter caseBinaryMaterialRelation(BinaryMaterialRelation object)
      {
        return createBinaryMaterialRelationAdapter();
      }
      @Override
      public Adapter caseBinaryFormalRelation(BinaryFormalRelation object)
      {
        return createBinaryFormalRelationAdapter();
      }
      @Override
      public Adapter caseModeUniversal(ModeUniversal object)
      {
        return createModeUniversalAdapter();
      }
      @Override
      public Adapter caseQualityUniversal(QualityUniversal object)
      {
        return createQualityUniversalAdapter();
      }
      @Override
      public Adapter casenAryMaterialRelation(nAryMaterialRelation object)
      {
        return createnAryMaterialRelationAdapter();
      }
      @Override
      public Adapter casenAryFormalRelation(nAryFormalRelation object)
      {
        return createnAryFormalRelationAdapter();
      }
      @Override
      public Adapter caseCharacterization(Characterization object)
      {
        return createCharacterizationAdapter();
      }
      @Override
      public Adapter caseMediation(Mediation object)
      {
        return createMediationAdapter();
      }
      @Override
      public Adapter casePrimitiveDataTypeType(PrimitiveDataTypeType object)
      {
        return createPrimitiveDataTypeTypeAdapter();
      }
      @Override
      public Adapter caseDataTypeAttribute(DataTypeAttribute object)
      {
        return createDataTypeAttributeAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.PackageableElement <em>Packageable Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.PackageableElement
   * @generated
   */
  public Adapter createPackageableElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.EndurantUniversal <em>Endurant Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.EndurantUniversal
   * @generated
   */
  public Adapter createEndurantUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Universal <em>Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Universal
   * @generated
   */
  public Adapter createUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.DataType
   * @generated
   */
  public Adapter createDataTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.IntrinsicMomentUniversal <em>Intrinsic Moment Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.IntrinsicMomentUniversal
   * @generated
   */
  public Adapter createIntrinsicMomentUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.ExternallyDependentUniversal <em>Externally Dependent Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.ExternallyDependentUniversal
   * @generated
   */
  public Adapter createExternallyDependentUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Package <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Package
   * @generated
   */
  public Adapter createPackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.GeneralizationSet <em>Generalization Set</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.GeneralizationSet
   * @generated
   */
  public Adapter createGeneralizationSetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataType <em>Primitive Data Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataType
   * @generated
   */
  public Adapter createPrimitiveDataTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.ComplexDataType <em>Complex Data Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.ComplexDataType
   * @generated
   */
  public Adapter createComplexDataTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Enumeration <em>Enumeration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Enumeration
   * @generated
   */
  public Adapter createEnumerationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.SubstantialUniversal <em>Substantial Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.SubstantialUniversal
   * @generated
   */
  public Adapter createSubstantialUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.MeronymicRelation <em>Meronymic Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.MeronymicRelation
   * @generated
   */
  public Adapter createMeronymicRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.ComponentOfRelation <em>Component Of Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.ComponentOfRelation
   * @generated
   */
  public Adapter createComponentOfRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.MembershipRelation <em>Membership Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.MembershipRelation
   * @generated
   */
  public Adapter createMembershipRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.SubCollectionRelation <em>Sub Collection Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.SubCollectionRelation
   * @generated
   */
  public Adapter createSubCollectionRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.SubQuantityRelation <em>Sub Quantity Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.SubQuantityRelation
   * @generated
   */
  public Adapter createSubQuantityRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Kind <em>Kind</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Kind
   * @generated
   */
  public Adapter createKindAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.QuantityUniversal <em>Quantity Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.QuantityUniversal
   * @generated
   */
  public Adapter createQuantityUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.CollectiveUniversal <em>Collective Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.CollectiveUniversal
   * @generated
   */
  public Adapter createCollectiveUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.SubKind <em>Sub Kind</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.SubKind
   * @generated
   */
  public Adapter createSubKindAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Role <em>Role</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Role
   * @generated
   */
  public Adapter createRoleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Phase <em>Phase</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Phase
   * @generated
   */
  public Adapter createPhaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Category <em>Category</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Category
   * @generated
   */
  public Adapter createCategoryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Mixin <em>Mixin</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Mixin
   * @generated
   */
  public Adapter createMixinAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.RoleMixin <em>Role Mixin</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.RoleMixin
   * @generated
   */
  public Adapter createRoleMixinAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.RelatorUniversal <em>Relator Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.RelatorUniversal
   * @generated
   */
  public Adapter createRelatorUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryMaterialRelation <em>Binary Material Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryMaterialRelation
   * @generated
   */
  public Adapter createBinaryMaterialRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryFormalRelation <em>Binary Formal Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.BinaryFormalRelation
   * @generated
   */
  public Adapter createBinaryFormalRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.ModeUniversal <em>Mode Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.ModeUniversal
   * @generated
   */
  public Adapter createModeUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.QualityUniversal <em>Quality Universal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.QualityUniversal
   * @generated
   */
  public Adapter createQualityUniversalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.nAryMaterialRelation <em>nAry Material Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.nAryMaterialRelation
   * @generated
   */
  public Adapter createnAryMaterialRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.nAryFormalRelation <em>nAry Formal Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.nAryFormalRelation
   * @generated
   */
  public Adapter createnAryFormalRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Characterization <em>Characterization</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Characterization
   * @generated
   */
  public Adapter createCharacterizationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.Mediation <em>Mediation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.Mediation
   * @generated
   */
  public Adapter createMediationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataTypeType <em>Primitive Data Type Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.PrimitiveDataTypeType
   * @generated
   */
  public Adapter createPrimitiveDataTypeTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufes.inf.ontouml.ontoumlprime.dsl.DataTypeAttribute <em>Data Type Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufes.inf.ontouml.ontoumlprime.dsl.DataTypeAttribute
   * @generated
   */
  public Adapter createDataTypeAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //DslAdapterFactory
